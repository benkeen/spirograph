{"version":3,"sources":["../../src/js/spirographs.jsx"],"names":["SpirographPanels","panels","props","store","map","panel","i","getPanels","Component","Panel","currTab","generalTabClass","stylesTabClass","getTab","GeneralTab","id","innerCircleSizePercentage","pointFromCenterPercentage","speed","e","target","value","StylesTab","lineThickness","lineTransparency","lineColorHex","backgroundColor"],"mappings":"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","file":"spirographs.js","sourcesContent":["import React from 'react';\nimport { observer } from 'mobx-react';\nimport _ from 'lodash';\n//import DevTools from 'mobx-react-devtools';\n\n\n@observer\nclass SpirographPanels extends React.Component {\n    getPanels () {\n        const { panels } = this.props.store;\n        return _.map(panels, (panel, i) => {\n            return (\n                <Panel store={this.props.store} panel={panel} key={i} />\n            );\n        });\n    }\n\n    render () {\n        return (\n            <section>\n                <ol id=\"spirographs\">\n                    {this.getPanels()}\n                </ol>\n            </section>\n        );\n    }\n}\n\n\n@observer\nclass Panel extends React.Component {\n    getTab () {\n        if (this.props.panel.currTab === 'general') {\n            return <GeneralTab {...this.props} />;\n        } else {\n            return <StylesTab {...this.props} />;\n        }\n    }\n\n    render () {\n        const { currTab } = this.props.panel;\n        const generalTabClass = (currTab === 'general') ? 'selected' : '';\n        const stylesTabClass = (currTab === 'styles') ? 'selected' : '';\n\n        return (\n            <li>\n                <div className=\"spiro-tabs\">\n                    <div className=\"spiro-controls\">\n                        <a href=\"#\" className=\"destroy\" title=\"Close this panel\">x</a>\n                    </div>\n                    <ol>\n                        <li className={generalTabClass}><a href=\"#\" data-tab=\"general\">General</a></li>\n                        <li className={stylesTabClass}><a href=\"#\" data-tab=\"styles\">Styles</a></li>\n                    </ol>\n                </div>\n\n                <section className=\"tabContent\">\n                    <div className=\"well\">\n                        {this.getTab()}\n                    </div>\n                </section>\n\n                <div className=\"well well-small\">\n                    <span className=\"spinner\" />\n                    <button className=\"btn-small btn-primary actionButton\">Draw &raquo;</button>\n                </div>\n\n                <div className=\"canvasWrapper\">\n                    <canvas className=\"spiroCanvas\" />\n                </div>\n            </li>\n        );\n    }\n}\n\n@observer\nclass GeneralTab extends React.Component {\n    render () {\n        const { id, innerCircleSizePercentage, pointFromCenterPercentage, speed } = this.props.panel;\n\n        return (\n            <table className=\"table\">\n                <tbody>\n                    <tr>\n                        <td><label htmlFor={`innerCircleSizePercentage${id}`}>Inner Circle Size</label></td>\n                        <td>\n                            <input type=\"range\" className=\"innerCircleSizePercentage\" id={`innerCircleSizePercentage${id}`}\n                                value={innerCircleSizePercentage} min=\"1\" max=\"99\" onChange={(e) => { this.props.panel.innerCircleSizePercentage = e.target.value} } />\n                            <ol className=\"rangeTip\">\n                                <li className=\"rangeTipLeft\">Small</li>\n                                <li className=\"rangeTipRight\">Large</li>\n                            </ol>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td><label htmlFor={`pointFromCenterPercentage${id}`}>Point from Center</label></td>\n                        <td>\n                            <input type=\"range\" className=\"pointFromCenterPercentage\" id={`pointFromCenterPercentage${id}`}\n                                value={pointFromCenterPercentage} min=\"1\" max=\"99\" />\n                            <ol className=\"rangeTip\">\n                                <li className=\"rangeTipLeft\">Small</li>\n                                <li className=\"rangeTipRight\">Large</li>\n                            </ol>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td><label htmlFor={`speed${id}`}>Speed</label></td>\n                        <td>\n                            <input type=\"range\" className=\"speed\" id={`speed${id}`} value={speed} min=\"10\" max=\"300\" />\n                            <ol className=\"rangeTip\">\n                                <li className=\"rangeTipLeft\">Slow</li>\n                                <li className=\"rangeTipRight\">Fast</li>\n                            </ol>\n                        </td>\n                    </tr>\n                </tbody>\n            </table>\n        );\n    }\n}\n\n@observer\nclass StylesTab extends React.Component {\n    render () {\n        const { id, lineThickness, lineTransparency, lineColorHex } = this.props.panel;\n\n        return (\n            <table className=\"table\">\n                <tbody>\n                <tr>\n                    <td><label htmlFor=\"lineThickness<%= cid %>\">Line Thickness</label></td>\n                    <td>\n                        <input type=\"range\" className=\"lineThickness\" id={`lineThickness${id}`} value={lineThickness}\n                            min=\"1\" step=\"1\" max=\"10\" />\n                        <ol className=\"rangeTip\">\n                            <li className=\"rangeTipLeft\">Thin</li>\n                            <li className=\"rangeTipRight\">Thick</li>\n                        </ol>\n                    </td>\n                </tr>\n                <tr>\n                    <td><label htmlFor={`lineTransparency${id}`}>Line Transparency</label></td>\n                    <td>\n                        <input type=\"range\" className=\"lineTransparency\" id={`lineTransparency${id}`} value={lineTransparency}\n                            min=\"0.01\" step=\"0.01\" max=\"1\" />\n                        <ol className=\"rangeTip\">\n                            <li className=\"rangeTipLeft\">Transparent</li>\n                            <li className=\"rangeTipRight\">Solid</li>\n                        </ol>\n                    </td>\n                </tr>\n                <tr>\n                    <td><label htmlFor={`lineColour${id}`}>Line Colour</label></td>\n                    <td>\n                        <div className=\"cpicker input-append color\" data-color={lineColorHex} data-color-format=\"hex\" id={`lineColour${id}`}>\n                            <input type=\"text\" className=\"span2\" value={lineColorHex} />\n                            <span className=\"add-on\"><i style={{ backgroundColor: lineColorHex }} /></span>\n                        </div>\n                    </td>\n                </tr>\n                </tbody>\n            </table>\n        );\n    }\n}\n\nexport default SpirographPanels;\n"]}